#summary Making authenticated requests

= OAuth (preferred) =

[http://code.google.com/apis/accounts/docs/GettingStarted.html#OAuth OAuth] is the preferred authentication mechanism for both [http://code.google.com/apis/accounts/docs/OAuth.html web] and [http://code.google.com/apis/accounts/docs/OAuthForInstalledApps.html installed] apps. Using the scope `http://www.google.com/reader/api/` obtain a request token, authorize it, exchange it for an access token, and make requests as usual, passing in the OAuth token in the `Authorization:` HTTP header. You may find the [http://googlecodesamples.com/oauth_playground/index.php OAuth Playground] useful in experimenting with all this.

= !ClientLogin =

Installed (desktop) apps may also use [http://code.google.com/apis/accounts/docs/AuthForInstalledApps.html ClientLogin] to perform authenticated requests against Google Reader's API. The app provides the user's username and password, and obtains an authentication token in response (the value after `Auth=` in the response). That token can be be included as an HTTP header in all requests (format `Authorization:GoogleLogin auth=<auth value>`).

Sample `curl` request to get the authentication token:

{{{
$ curl -d accountType=GOOGLE \
  -d Email=username@gmail.com \
  -d Passwd=password \
  -d service=reader \
  https://www.google.com/accounts/ClientLogin
SID=<SID value> # ignored
LSID=<LSID value> # ignored
Auth=<auth value>
}}}

Sample `curl` request that uses the authentication token:

{{{
$ curl -H "Authorization:GoogleLogin auth=<auth value>" http://www.google.com/reader/api/0/user-info
{
  "userId":"123",
  "userName":"Name",
  "userProfileId":"123",
  "userEmail":"username@gmail.com",
  "isBloggerUser":true,
  "signupTimeSec":0,
  "publicUserName":"username"
}
}}}

Clients should also handle CAPTCHA challenges, see the [http://code.google.com/apis/accounts/docs/AuthForInstalledApps.html#AuthProcess documentation] for more information.